I"ù<p>To build scenes for Decentraland you will need to install the Command Line Interface (CLI).</p>

<p>The CLI allows you to compile and preview your scene in an ‚Äúoff-chain‚Äù development environment. After testing your scene locally, you can use the CLI to upload your content to the content server, linking it with your LAND.</p>

<p><strong>Please note:</strong> Currently, the Decentraland SDK (bundled with the CLI installation) only supports TypeScript.</p>

<p>The Decentraland CLI is distributed via <a href="https://www.npmjs.com/get-npm?utm_source=house&amp;utm_medium=homepage&amp;utm_campaign=free%20orgs&amp;utm_term=Install%20npm">npm</a>.</p>

<h2 id="before-you-begin">Before you Begin</h2>

<p>Please install the following dependencies before you install the CLI:</p>

<ul>
  <li><a href="https://nodejs.org">Node.js</a> (version 8 or later)</li>
</ul>

<h2 id="install-the-cli">Install the CLI</h2>

<p>Open the <em>Terminal</em> app and run the following command:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> decentraland
</code></pre></div></div>

<p>Once the installation is complete, the <code class="language-plaintext highlighter-rouge">dcl</code> command will be globally available.</p>

<h2 id="update-the-cli-on-any-platform">Update the CLI on any platform</h2>

<p>To update the CLI to the latest supported version, we recommend first uninstalling the CLI and then reinstalling a fresh version. To do this, run the following commands:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>// uninstall
npm <span class="nb">rm </span>decentraland <span class="nt">-g</span>

// <span class="nb">install
</span>npm <span class="nb">install</span> <span class="nt">-g</span> decentraland
</code></pre></div></div>

<h4 id="update-the-sdk-version-of-a-scene">Update the SDK version of a scene</h4>

<p>If your CLI is up to date, the new projects you create with it will use the latest version of the SDK.</p>

<p>The SDK version used by your existing projects doesn‚Äôt change by updating the CLI. You need to manually update the SDK version in the projects.</p>

<p>Run the following command on the scene folder:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm i decentraland-ecs@latest
</code></pre></div></div>

<p>You can confirm that it worked by checking the <code class="language-plaintext highlighter-rouge">package.json</code> file for the scene, and looking for the <code class="language-plaintext highlighter-rouge">decentraland-ecs</code> version there.</p>

<!--


#### Optional: Install Git

Mac OS and linux-based machines should have git installed by default, these steps should only be relevant to Windows based machines.

1.  Download [git](https://git-scm.com/download/win) (you'll likely want the 64-bit Windows version)
2.  The installation process will prompt you to choose severla options, we recommend the following:
	1.  Install **git bash**
	2.  For default text editor, select **Use the Nano editor by default**
	3.  For path environment, select **Use Git from the Windows Command Prompt**
	4.  For SSH executable, select **Use OpenSSH**
	5.  For HTTPS transport backend, select **Use the OpenSSL library**
	6.  For line ending conversions, select **Checkout Windows-style, commit Unix-style line endings**
	7.  For the terminal emusans-serifr to use with Git Bash select **Use MinTTY**
	8.  On the final installation screen select the following options
		- **Enable file system caching**
		- **Enable Git Credential Manager**
		- **Enable symbolic links**

-->
:ET