I"öG<h2 id="avatar-modifiers">Avatar Modifiers</h2>

<p>Avatars behave and look consistently throughout Decentraland as they walk across scenes. However, you can add an <code class="language-plaintext highlighter-rouge">AvatarModifierArea</code> to a region of your scene to affect how player avatars behave when they enter that area.</p>

<h4 id="placing-avatar-modifier-areas">Placing Avatar Modifier Areas</h4>

<p>Add an entity with an <code class="language-plaintext highlighter-rouge">AvatarModifierArea</code> component and position this entity by using a <code class="language-plaintext highlighter-rouge">Transform</code> component.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">modArea</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Entity</span><span class="p">()</span>
<span class="nx">modArea</span><span class="p">.</span><span class="nx">addComponent</span><span class="p">(</span>
  <span class="k">new</span> <span class="nx">AvatarModifierArea</span><span class="p">({</span>
    <span class="na">area</span><span class="p">:</span> <span class="p">{</span> <span class="na">box</span><span class="p">:</span> <span class="k">new</span> <span class="nx">Vector3</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">16</span><span class="p">)</span> <span class="p">},</span>
    <span class="na">modifiers</span><span class="p">:</span> <span class="p">[</span><span class="nx">AvatarModifiers</span><span class="p">.</span><span class="nx">HIDE_AVATARS</span><span class="p">],</span>
  <span class="p">})</span>
<span class="p">)</span>
<span class="nx">modArea</span><span class="p">.</span><span class="nx">addComponent</span><span class="p">(</span>
  <span class="k">new</span> <span class="nx">Transform</span><span class="p">({</span>
    <span class="na">position</span><span class="p">:</span> <span class="k">new</span> <span class="nx">Vector3</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">8</span><span class="p">),</span>
  <span class="p">})</span>
<span class="p">)</span>
<span class="nx">engine</span><span class="p">.</span><span class="nx">addEntity</span><span class="p">(</span><span class="nx">modArea</span><span class="p">)</span>
</code></pre></div></div>

<p>When creating an <code class="language-plaintext highlighter-rouge">AvatarModifierArea</code> component, you must provide the following:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">area</code>: Size and shape of the modifier area</li>
  <li><code class="language-plaintext highlighter-rouge">modifiers</code>: An array listing the modifiers to implement in the area</li>
</ul>

<p>The only currently supported shape for the area is <code class="language-plaintext highlighter-rouge">box</code>. Specify the scale of this box as a <code class="language-plaintext highlighter-rouge">Vector3</code>, for example
<code class="language-plaintext highlighter-rouge">{ box: new Vector3(16, 4, 16) }</code>.</p>

<p>The supported modifiers are:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">AvatarModifiers.HIDE_AVATARS</code></li>
  <li><code class="language-plaintext highlighter-rouge">AvatarModifiers.DISABLE_PASSPORTS</code></li>
</ul>

<p>All the effects of an <code class="language-plaintext highlighter-rouge">AvatarModifierArea</code> only take place within the region of their area. Players return to normal when they walk out of the area.</p>

<p>An <code class="language-plaintext highlighter-rouge">AvatarModifierArea</code> affects only players that are inside the area, entering the area doesnâ€™t affect how other players that are outside the area are perceived.</p>

<p>The effects of an <code class="language-plaintext highlighter-rouge">AvatarModifierArea</code> are calculated locally for each player. You can have an <code class="language-plaintext highlighter-rouge">AvatarModifierArea</code> that is only present in the scene for some players and not for others. For example, if the area hides avatars, then the players that donâ€™t have the area in their local version of the scene will see all avatars normally. Even those that experience themselves as hidden. Players that do have the area will experience themselves and all other avatars as affected by the area when they enter it.</p>

<blockquote>
  <p>Note: Avatar modifier areas are affected by the <em>position</em> and <em>rotation</em> of the Transform component of their host entity, but theyâ€™re not affected by the <em>scale</em>.</p>
</blockquote>

<h4 id="hide-avatars">Hide avatars</h4>

<p>When a player walks into an <code class="language-plaintext highlighter-rouge">AvatarModifierArea</code> that has the <code class="language-plaintext highlighter-rouge">HIDE_AVATARS</code> modifier, the playerâ€™s avatar stops being rendered. This applies both for the player in 3rd person view, and for when other players walk into the area.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">modArea</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Entity</span><span class="p">()</span>
<span class="nx">modArea</span><span class="p">.</span><span class="nx">addComponent</span><span class="p">(</span>
  <span class="k">new</span> <span class="nx">AvatarModifierArea</span><span class="p">({</span>
    <span class="na">area</span><span class="p">:</span> <span class="p">{</span> <span class="na">box</span><span class="p">:</span> <span class="k">new</span> <span class="nx">Vector3</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">16</span><span class="p">)</span> <span class="p">},</span>
    <span class="na">modifiers</span><span class="p">:</span> <span class="p">[</span><span class="nx">AvatarModifiers</span><span class="p">.</span><span class="nx">HIDE_AVATARS</span><span class="p">],</span>
  <span class="p">})</span>
<span class="p">)</span>
<span class="nx">modArea</span><span class="p">.</span><span class="nx">addComponent</span><span class="p">(</span>
  <span class="k">new</span> <span class="nx">Transform</span><span class="p">({</span>
    <span class="na">position</span><span class="p">:</span> <span class="k">new</span> <span class="nx">Vector3</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">8</span><span class="p">),</span>
  <span class="p">})</span>
<span class="p">)</span>
<span class="nx">engine</span><span class="p">.</span><span class="nx">addEntity</span><span class="p">(</span><span class="nx">modArea</span><span class="p">)</span>
</code></pre></div></div>

<p>This allows you to replace the default Decentraland avatar with any custom avatar you might want to show in your scene. Note that if you want to see other players with custom avatars, you should handle the syncing of player positions yourself.</p>

<h4 id="disable-passport-popup">Disable Passport Popup</h4>

<p>When a player walks into an <code class="language-plaintext highlighter-rouge">AvatarModifierArea</code> that has the <code class="language-plaintext highlighter-rouge">DISABLE_PASSPORTS</code> modifier, clicking on them no longer opens up the passport UI that shows the player bio, inventory, etc.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">modArea</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Entity</span><span class="p">()</span>
<span class="nx">modArea</span><span class="p">.</span><span class="nx">addComponent</span><span class="p">(</span>
  <span class="k">new</span> <span class="nx">AvatarModifierArea</span><span class="p">({</span>
    <span class="na">area</span><span class="p">:</span> <span class="p">{</span> <span class="na">box</span><span class="p">:</span> <span class="k">new</span> <span class="nx">Vector3</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">16</span><span class="p">)</span> <span class="p">},</span>
    <span class="na">modifiers</span><span class="p">:</span> <span class="p">[</span><span class="nx">AvatarModifiers</span><span class="p">.</span><span class="nx">DISABLE_PASSPORTS</span><span class="p">],</span>
  <span class="p">})</span>
<span class="p">)</span>
<span class="nx">modArea</span><span class="p">.</span><span class="nx">addComponent</span><span class="p">(</span>
  <span class="k">new</span> <span class="nx">Transform</span><span class="p">({</span>
    <span class="na">position</span><span class="p">:</span> <span class="k">new</span> <span class="nx">Vector3</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">8</span><span class="p">),</span>
  <span class="p">})</span>
<span class="p">)</span>
<span class="nx">engine</span><span class="p">.</span><span class="nx">addEntity</span><span class="p">(</span><span class="nx">modArea</span><span class="p">)</span>
</code></pre></div></div>

<p>This is especially useful in games where accidentally opening this UI could interrupt the flow of a game, for example in a multiplayer shooter game.</p>

<h2 id="camera-modifiers">Camera modifiers</h2>

<p>Players are normally free to switch between first and third person camera by pressing V on the keyboard. Use a <code class="language-plaintext highlighter-rouge">CameraModeArea</code> to force the camera mode to either 1st or 3rd person for all players that stand within a specific area in your scene.</p>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">modArea</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Entity</span><span class="p">()</span>
<span class="nx">modArea</span><span class="p">.</span><span class="nx">addComponent</span><span class="p">(</span>
  <span class="k">new</span> <span class="nx">CameraModeArea</span><span class="p">({</span>
    <span class="na">area</span><span class="p">:</span> <span class="p">{</span> <span class="na">box</span><span class="p">:</span> <span class="k">new</span> <span class="nx">Vector3</span><span class="p">(</span><span class="mi">16</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">14</span><span class="p">)</span> <span class="p">},</span>
    <span class="na">cameraMode</span><span class="p">:</span> <span class="nx">CameraMode</span><span class="p">.</span><span class="nx">FirstPerson</span><span class="p">,</span>
  <span class="p">})</span>
<span class="p">)</span>
<span class="nx">modArea</span><span class="p">.</span><span class="nx">addComponent</span><span class="p">(</span>
  <span class="k">new</span> <span class="nx">Transform</span><span class="p">({</span>
    <span class="na">position</span><span class="p">:</span> <span class="k">new</span> <span class="nx">Vector3</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">8</span><span class="p">),</span>
  <span class="p">})</span>
<span class="p">)</span>
<span class="nx">engine</span><span class="p">.</span><span class="nx">addEntity</span><span class="p">(</span><span class="nx">modArea</span><span class="p">)</span>
</code></pre></div></div>

<p>If a playerâ€™s current camera mode doesnâ€™t match that of the <code class="language-plaintext highlighter-rouge">CameraModeArea</code>, they will transition to that camera mode. A toast appears onscreen to clarify that this change is due to the scene. While inside, players canâ€™t change their camera mode. When a player leaves the <code class="language-plaintext highlighter-rouge">CameraModeArea</code>, their camera mode is restored to what they had before entering.</p>

<p>Use <code class="language-plaintext highlighter-rouge">CameraModeArea</code> in regions where players would have a significantly better experience by using a specific camera mode. For example, first person is ideal if the player needs to click on small object, or third person may be useful for players to notice some entity that your scene has attached over their head. Donâ€™t assume players know how to switch camera modes, many first-time players might not know they have the option, or not remember the key to do it.</p>

<blockquote>
  <p>Note: Camera modifier areas are affected by the <em>position</em> and <em>rotation</em> of the Transform component of their host entity, but theyâ€™re not affected by the <em>scale</em>.</p>
</blockquote>

<blockquote>
  <p>Note: If you overlap multiple camera modifier areas, the last one to be instanced by your sceneâ€™s code will take priority over the others.</p>
</blockquote>

<p>When creating an <code class="language-plaintext highlighter-rouge">CameraModeArea</code> component, you must provide the following:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">area</code>: Size and shape of the modifier area</li>
  <li><code class="language-plaintext highlighter-rouge">cameraMode</code>: Which camera mode to force in this area, from the <code class="language-plaintext highlighter-rouge">CameraMode</code> enum.</li>
</ul>

<p>The only currently supported shape for the area is <code class="language-plaintext highlighter-rouge">box</code>. Specify the scale of this box as a <code class="language-plaintext highlighter-rouge">Vector3</code>, for example
<code class="language-plaintext highlighter-rouge">{ box: new Vector3(16, 4, 16) }</code>.</p>

<p>The supported camera modes are:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">CameraMode.FirstPerson</code></li>
  <li><code class="language-plaintext highlighter-rouge">CameraMode.ThirdPerson</code></li>
</ul>

<h2 id="debug-modifier-areas">Debug modifier areas</h2>

<p>It can be tough to know exactly what parts of the scene your modifier areas cover based on the code. Visual feedback helps a lot to confirm that theyâ€™re well placed.</p>

<p>To verify the positions of a <code class="language-plaintext highlighter-rouge">AvatarModifierArea</code> or a <code class="language-plaintext highlighter-rouge">CameraModeArea</code>, give the entity holding it a <code class="language-plaintext highlighter-rouge">BoxShape</code> component, and set the scale to the same size as the <code class="language-plaintext highlighter-rouge">area</code> of the modifier area.</p>

<blockquote>
  <p>Note: Modifier areas arenâ€™t affected by the <code class="language-plaintext highlighter-rouge">scale</code> property of the transform, their size is based on their <code class="language-plaintext highlighter-rouge">area</code> property.</p>
</blockquote>

<div class="language-ts highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">myEntity</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Entity</span><span class="p">()</span>
<span class="nx">myEntity</span><span class="p">.</span><span class="nx">addComponent</span><span class="p">(</span>
  <span class="k">new</span> <span class="nx">Transform</span><span class="p">({</span>
    <span class="na">position</span><span class="p">:</span> <span class="k">new</span> <span class="nx">Vector3</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">8</span><span class="p">),</span>
    <span class="na">scale</span><span class="p">:</span> <span class="k">new</span> <span class="nx">Vector3</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">),</span>
    <span class="na">rotation</span><span class="p">:</span> <span class="nx">Quaternion</span><span class="p">.</span><span class="nx">Euler</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span>
  <span class="p">})</span>
<span class="p">)</span>
<span class="nx">myEntity</span><span class="p">.</span><span class="nx">addComponent</span><span class="p">(</span>
  <span class="k">new</span> <span class="nx">CameraModeArea</span><span class="p">({</span>
    <span class="na">area</span><span class="p">:</span> <span class="p">{</span> <span class="na">box</span><span class="p">:</span> <span class="k">new</span> <span class="nx">Vector3</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">8</span><span class="p">)</span> <span class="p">},</span>
    <span class="na">cameraMode</span><span class="p">:</span> <span class="nx">CameraMode</span><span class="p">.</span><span class="nx">FirstPerson</span><span class="p">,</span>
  <span class="p">})</span>
<span class="p">)</span>

<span class="nx">myEntity</span><span class="p">.</span><span class="nx">addComponent</span><span class="p">(</span><span class="k">new</span> <span class="nx">BoxShape</span><span class="p">()).</span><span class="nx">withCollisions</span> <span class="o">=</span> <span class="kc">false</span>
<span class="nx">engine</span><span class="p">.</span><span class="nx">addEntity</span><span class="p">(</span><span class="nx">myEntity</span><span class="p">)</span>
</code></pre></div></div>

<p>To activate the effects of the modifier area, the playerâ€™s head or torso should enter the area. It wonâ€™t take effect if only the feet of the player are covered. Make sure the player canâ€™t easily evade the area by jumping.</p>

<blockquote>
  <p>Note: The full area should fit inside the limits of your scene.</p>
</blockquote>
:ET