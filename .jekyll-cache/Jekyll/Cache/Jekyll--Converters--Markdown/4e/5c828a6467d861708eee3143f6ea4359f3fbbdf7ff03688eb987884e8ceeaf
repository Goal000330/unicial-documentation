I"l7<blockquote>
  <p>Note: This version of the SDK is now deprecated. You can find the full documentation for this version in the <a href="https://docs-legacy.decentraland.org/">legacy documentation</a></p>
</blockquote>

<h2 id="411">4.1.1</h2>

<ul>
  <li>Fixed the method for signing using an ethereum address.</li>
  <li>Performance improvements.</li>
  <li>Ambient/sky improvements in preview.</li>
  <li>Added joystick in mobile view.</li>
</ul>

<h2 id="410">4.1.0</h2>

<ul>
  <li>
    <p>A few packages have been rebranded:</p>

    <ul>
      <li>metaverse-api is now decentraland-api</li>
      <li>metaverse-rpc is now decentraland-rpc</li>
      <li>metaverse-compiler is now decentraland-compiler</li>
    </ul>
  </li>
</ul>

<p>When migrating a scene to 4.1.0, keep in mind that the first lines of the file that import from <code class="language-plaintext highlighter-rouge">metaverse-api</code> must be changed to import from <code class="language-plaintext highlighter-rouge">decentraland-api</code>.</p>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">DCL</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">decentraland-api</span><span class="dl">"</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Vector3Component</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">decentraland-api</span><span class="dl">"</span>
</code></pre></div></div>

<ul>
  <li>The new <code class="language-plaintext highlighter-rouge">onClick</code> handler can be added to any entity to handle click events in the same way that React handles clicks. This can greatly simplify scene code, for example:</li>
</ul>

<p><strong>Old way</strong></p>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">DCL</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">decentraland-api</span><span class="dl">"</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">InteractiveCubeScene</span> <span class="kd">extends</span> <span class="nx">DCL</span><span class="p">.</span><span class="nx">ScriptableScene</span> <span class="p">{</span>
  <span class="nx">state</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">size</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="p">}</span>

  <span class="nx">sceneDidMount</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">eventSubscriber</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="dl">"</span><span class="s2">interactiveBox_click</span><span class="dl">"</span><span class="p">,</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="k">this</span><span class="p">.</span><span class="nx">resizeBox</span><span class="p">()</span>
    <span class="p">})</span>
  <span class="p">}</span>

  <span class="nx">resizeBox</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span> <span class="na">size</span><span class="p">:</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="mi">3</span> <span class="p">})</span>
  <span class="p">}</span>

  <span class="k">async</span> <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">(</span>
      <span class="p">&lt;</span><span class="nt">scene</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">box</span>
          <span class="na">id</span><span class="p">=</span><span class="s">"interactiveBox"</span>
          <span class="na">withCollisions</span>
          <span class="na">scale</span><span class="p">=</span><span class="si">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">size</span><span class="si">}</span>
          <span class="na">position</span><span class="p">=</span><span class="si">{</span><span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">z</span><span class="p">:</span> <span class="mi">5</span> <span class="p">}</span><span class="si">}</span>
        <span class="p">/&gt;</span>
      <span class="p">&lt;/</span><span class="nt">scene</span><span class="p">&gt;</span>
    <span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><strong>New way</strong></p>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">DCL</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">decentraland-api</span><span class="dl">"</span>

<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">InteractiveCubeScene</span> <span class="kd">extends</span> <span class="nx">DCL</span><span class="p">.</span><span class="nx">ScriptableScene</span> <span class="p">{</span>
  <span class="nx">state</span> <span class="o">=</span> <span class="p">{</span>
    <span class="na">size</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
  <span class="p">}</span>

  <span class="nx">resizeBox</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">({</span> <span class="na">size</span><span class="p">:</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">*</span> <span class="mi">3</span> <span class="p">})</span>
  <span class="p">}</span>

  <span class="k">async</span> <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">(</span>
      <span class="p">&lt;</span><span class="nt">scene</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">box</span>
          <span class="na">onClick</span><span class="p">=</span><span class="si">{</span><span class="k">this</span><span class="p">.</span><span class="nx">resizeBox</span><span class="si">}</span>
          <span class="na">withCollisions</span>
          <span class="na">scale</span><span class="p">=</span><span class="si">{</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="p">.</span><span class="nx">size</span><span class="si">}</span>
          <span class="na">position</span><span class="p">=</span><span class="si">{</span><span class="p">{</span> <span class="na">x</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="na">y</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="na">z</span><span class="p">:</span> <span class="mi">5</span> <span class="p">}</span><span class="si">}</span>
        <span class="p">/&gt;</span>
      <span class="p">&lt;/</span><span class="nt">scene</span><span class="p">&gt;</span>
    <span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Note that the new way saves you from having to create and subscribe to a click event, and attaching and ID to every element that needs to handle a click. Using this handler, the entity doesn’t require an ID to be clicked. All you need to do is pass a function through an <code class="language-plaintext highlighter-rouge">onClick</code> JSX attribute and enjoy!</p>

<ul>
  <li>The parcel limits are now inclusive.</li>
</ul>

<p>Before, entities couldn’t reach the border of the scene’s parcels, you needed to limit positions to something like <code class="language-plaintext highlighter-rouge">{ x: 9.9, y:1, z: 9.9}</code> in a 1 parcel scene. Now you can position things up to the very limit of the parcels, so on a 1 parcel scene entities can reach <code class="language-plaintext highlighter-rouge">{ x: 10, y:1, z: 10}</code></p>

<ul>
  <li>
    <p>Static scenes have better performance</p>
  </li>
  <li>
    <p>A bug was fixed where an entity’s <code class="language-plaintext highlighter-rouge">lookAt</code> value couldn’t be the same as the value for <code class="language-plaintext highlighter-rouge">position</code>. This was problematic in scenarios where you need a character to move slowly towards a position (with a transition) and look in that direction as it does. Now this scenario is fully supported.</p>
  </li>
  <li>
    <p>Preview scenes have a new lighting configuration. Previous lighting conditions were too bright and didn’t allow the geometry of certain shapes to be seen clearly.</p>
  </li>
</ul>

<h4 id="migrate-a-scene-to-410">Migrate a scene to 4.1.0</h4>

<p>To migrate a scene built with an earlier version to 4.1.0, follow these steps:</p>

<ul>
  <li>Delete the file <em>package-lock.json</em></li>
  <li>Delete the folder <em>node_modules</em></li>
  <li>In <em>scene.tsx</em>, change all imports from <em>metaverse-api</em> to <em>decentraland-api</em>. For example:</li>
</ul>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">DCL</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">decentraland-api</span><span class="dl">"</span>
</code></pre></div></div>

<ul>
  <li>Modify the <em>package.json</em> file to change the following:
    <ul>
      <li>Change <code class="language-plaintext highlighter-rouge">metaverse-compiler</code> into <code class="language-plaintext highlighter-rouge">decentraland-compiler</code>.</li>
      <li>Change <code class="language-plaintext highlighter-rouge">metaverse-api</code> into <code class="language-plaintext highlighter-rouge">decentraland-api</code>.</li>
      <li>Add <code class="language-plaintext highlighter-rouge">"decentraland": "latest"</code> in devDependencies.
The file should look something like this:</li>
    </ul>
  </li>
</ul>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">dcl-project</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">version</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">1.0.0</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">description</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">My new Decentraland project</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">scripts</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">start</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">dcl start</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">build</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">decentraland-compiler build.json</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">watch</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">decentraland-compiler build.json --watch</span><span class="dl">"</span>
  <span class="p">},</span>
  <span class="dl">"</span><span class="s2">author</span><span class="dl">"</span><span class="p">:</span> <span class="dl">""</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">license</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">MIT</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">devDependencies</span><span class="dl">"</span><span class="p">:</span> <span class="p">{</span>
    <span class="dl">"</span><span class="s2">decentraland-api</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">latest</span><span class="dl">"</span><span class="p">,</span>
    <span class="dl">"</span><span class="s2">decentraland</span><span class="dl">"</span><span class="p">:</span> <span class="dl">"</span><span class="s2">latest</span><span class="dl">"</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>Run <code class="language-plaintext highlighter-rouge">npm install</code> or <code class="language-plaintext highlighter-rouge">dcl start</code> to build new versions of <em>package-lock.json</em> and <em>node_modules</em> based on the dependencies of the new version.</li>
  <li>If your scene included any special dependencies, like Babylon or Axios, install them again with <code class="language-plaintext highlighter-rouge">npm</code>.</li>
</ul>
:ET